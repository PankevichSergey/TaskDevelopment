{"scoring":"В данной задаче $50$ тестов, помимо тестов из условия, каждый из них оценивается в $2$ балла. Результаты работы ваших решений на всех тестах будут доступны сразу во время соревнования. \n\nРешения, корректно работающие, когда обе программы состоят только из символов `a' и `b', наберут не менее 20 баллов.\n\nРешения, корректно работающие, когда обе программы состоят только из символов `a', `b', `c', наберут не менее 40 баллов.\n\nРешения, корректно работающие при $n \\leqslant 1\\,000$ наберут не менее 60 баллов.\n\nРешения, корректно работающие только для случая, когда обнаружить списывание не удалось, оцениваются в 0 баллов.\n\n\n","notes":"В первом примере списывающий заменил все вхождения `i' на `j' и вхождения `n' на `m'. \n\nВо втором примере участник заменял `a' на `e', `b' на `f', `с' на g' и `-' на `+'. \n\nВ третьем примере невозможно осуществить процесс замен так, чтобы из первой строки получилась вторая. \n\nВ четвертом примере участник списал, заменив некоторые вхождения `a' на `b'. \n\nВ пятом примере участник списал, заменив некоторые вхождения `a' на `b' и все вхождения `c' на `a'.","legend":"Вы создали очередную платформу для проведения онлайн соревнований по программированию. После первого контеста вы изучили решения участников и заметили, что некоторые списывают друг у друга. После этого вам захотелось написать программу, чтобы быстрее обнаруживать списывания и блокировать нечестных участников. \n\nПусть есть две строки, описывающие решения. Рассмотрим не более одного раза каждый символ, хотя бы где-то входящий в первую строку. После этого для рассматриваемого символа $x$ определим другой символ $p(x) \\neq x$ и заменим некоторые вхождения $x$ в первое решение на $p(x)$. Если в ходе такого процесса из первого решения возможно получить второе, то скажем, что второе решение списано с первого. \n\nИными словами, участник копирует чужое решение и, чтобы списывание не было таким очевидным, один раз рассматривает некоторые различные символы $x$, которые хотя бы раз встречаются в первом решении. Для каждого такого символа $x$ он выбирает, на какой другой символ $p(x)$ он будет заменять его вхождения, после чего проходит по строке и заменяет в ней $x$ на $p(x)$, но на некоторых позициях забывает это сделать (или там замена невозможна).\n\nЗначения $p(x)$ участником выбираются независимо для разных $x$, поэтому они могут и совпасть.\n\nНапишите программу, которая позволит обнаружить списывания такого рода.","authorLogin":"spankevich","language":"russian","timeLimit":1000,"output":"Если вторая программа списана с первой, выведите <<YES>> (без кавычек), на следующей строке выведите $m$ -- количество различных символов в первой программе, которые хотя бы раз заменялись. Обозначим эти символы за $c_1,\\ c_2,\\ \\ldots, \\  c_m$. После этого выведите $m$ строк. На $i$-й строке  необходимо вывести символы $c_i$ и $p(c_i)$ через пробел. Если вторая программа не списана с первой, то выведите <<NO>> (без кавычек).","inputFile":"stdin","outputFile":"stdout","input":"Кроме платформы вы создали язык программирования S++ и, чтобы его популяризировать, вы решили разрешить сдавать задачи в своей системе только на нем. Одной из особенностью языка является то, что любая программа записывается в одну строку и может состоять только из строчных и заглавных букв английского алфавита (a-z, A-Z), цифр (0-9), скобок (`(', `)', `\\{', `\\}' `[', `]'), знаков сравнения (`<', `>', `=') и символов `+', `-', `*', `/', `;'. \n\nВ первой строке вам дано число  $n$ $(1 \\leqslant  n \\leqslant 200\\,000)$, равное длине каждой из программ.\n\nВо второй строке вам дана программа первого участника на языке S++.\n\nВ третьей строке вам дана программа второго участника на языке S++.\n","authorName":"Sergey Pankevich","sampleTests":[{"output":"YES\n2\ni j\nn m\n","input":"16\nfor(i=0;i<n;++i)\nfor(j=0;j<m;++j)\n","inputFile":"example.01","outputFile":"example.01.a"},{"output":"YES\n4\n- +\na e\nb f\nc g\n","input":"14\na=1;b=-1;c=a-b\ne=1;f=+1;g=e+f\n","inputFile":"example.02","outputFile":"example.02.a"},{"output":"NO\n","input":"5\na=a+a\na=c+d\n","inputFile":"example.03","outputFile":"example.03.a"},{"output":"YES\n1\na b\n","input":"4\naaab\nabbb\n","inputFile":"example.04","outputFile":"example.04.a"},{"output":"YES\n2\na b\nc a\n","input":"6\naaabcc\nabbbaa\n","inputFile":"example.05","outputFile":"example.05.a"},{"output":"YES\n2\nb a\nc a\n","input":"3\nabc\naaa\n","inputFile":"example.06","outputFile":"example.06.a"}],"name":"Проверка на списывание","interaction":null,"memoryLimit":268435456,"tutorial":"Если строки состоят только из символов `a', `b', то ответ всегда <<YES>> и нужно только проверить, заменяется ли на каких-то позициях `a' на `b' и `b' на `a'. \n\nВ общем случае есть следующий критерий. Рассмотрим каждый символ, хотя бы раз входящий в первую строку. Обозначим рассматриваемый символ за $x$ и найдем все позиции, на которых $x$ в нее входит. Посмотрим на множество различных символов не равных $x$ на тех же позициях во второй строке. Если в этом множестве есть хотя бы два символа, то получить из первой строки вторую невозможно. Если множество пустое, то символ не участвует в заменах. А если в множестве ровно один символ $y$, то пара $x\\ y$ будет одной из нужных замен. \n\nЕсли после проверки для какого-то символа выяснилось, что преобразовать строки нельзя, то нужно вывести <<NO>>. Иначе ответ <<YES>> и нужно вывести все найденные замены."}
